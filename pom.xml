<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>com.nuance.common</groupId>
    <artifactId>service-parent</artifactId>
    <version>1.4.0</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.nuance.service</groupId>
  <artifactId>test-azuremonitor</artifactId>
  <version>${revision}</version>

  <packaging>jar</packaging>
  <name>test-azuremonitor</name>
  <description>A description for test-azuremonitor</description>

  <properties>
    <revision>1.0.0-SNAPSHOT</revision>
        <!-- to be set to 0.90 for a mature project -->
    <code-coverage>0.50</code-coverage>
    <!-- Enable these -->
    <checkstyle.skip>false</checkstyle.skip>
    <forbiddenapis.skip>false</forbiddenapis.skip>
    <jacoco.skip>false</jacoco.skip>
    <maven.javadoc.skip>false</maven.javadoc.skip>
    <spotbugs.skip>false</spotbugs.skip>
    <pmd.skip>false</pmd.skip>
    <dependency-check.skip>true</dependency-check.skip>
        <!-- Swagger -->
    <swagger2markup.version>1.3.7</swagger2markup.version>
    <swagger2markup.ext.version>1.3.3</swagger2markup.ext.version>
    <springdoc-openapi.version>1.5.10</springdoc-openapi.version>
    <springfox-staticdocs.version>2.6.1</springfox-staticdocs.version>
    <asciidoctor-maven-plugin.version>2.1.0</asciidoctor-maven-plugin.version>
    <asciidoctor.input.directory>${project.basedir}/src/docs/asciidoc</asciidoctor.input.directory>
    <swagger.output.dir>${project.build.directory}/swagger</swagger.output.dir>
    <swagger.snippetOutput.dir>${project.build.directory}/asciidoc/snippets
    </swagger.snippetOutput.dir>
    <generated.asciidoc.directory>${project.build.directory}/asciidoc/generated
    </generated.asciidoc.directory>
    <asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html
    </asciidoctor.html.output.directory>
    <swagger.info.object.file>${project.basedir}/src/main/resources/swagger_info.json
    </swagger.info.object.file>
    <swagger.input>${swagger.output.dir}/swagger.json</swagger.input>
    <swagger-maven-plugin-version>3.1.8</swagger-maven-plugin-version>
    <org.projectlombok.version>1.18.20</org.projectlombok.version>
    
    <!--  project.version.suffix: could be passed from CI pipeline as build-number and appended to tag for docker image and helm chart version   -->
    <project.version.suffix/>
    <helm.maven.plugin.version>5.9</helm.maven.plugin.version>
    <helm.chart.version>${revision}</helm.chart.version>
    <helm.repo.stable.url/>
    <helm.repo.stable.username/>
    <helm.repo.stable.password/>
    <helm.repo.snapshot.url/>
    <helm.repo.snapshot.username/>
    <helm.repo.snapshot.password/>

    <!-- Temporary: Upgrade this on paret pom project -->
    <spring.boot.maven.plugin.version>2.5.3</spring.boot.maven.plugin.version>
  </properties>

  <profiles>
    <profile>
      <id>ci</id>
      <distributionManagement>
        <repository>
          <id>entrd-artifactory-releases</id>
          <name>Nuance Artifactory Releases</name>
          <url>https://entrd-jfrog.ent.nuance.com/artifactory/libs-release-local</url>
        </repository>
        <snapshotRepository>
          <id>entrd-artifactory-snapshots</id>
          <name>Nuance Artifactory Snapshots</name>
          <url>https://entrd-jfrog.ent.nuance.com/artifactory/libs-snapshot-local</url>
        </snapshotRepository>
      </distributionManagement>
    </profile>
  </profiles>

  <dependencies>
    <!-- Azure -->
    <dependency>
      <groupId>com.microsoft.azure</groupId>
      <artifactId>azure</artifactId>
      <version>1.16.0</version>
    </dependency>
    <dependency>
      <groupId>com.azure.resourcemanager</groupId>
      <artifactId>azure-resourcemanager</artifactId>
      <version>2.1.0</version>
    </dependency>
    <dependency>
      <groupId>com.azure</groupId>
      <artifactId>azure-identity</artifactId>
      <version>1.2.0</version>
    </dependency>
    <dependency>
      <groupId>com.microsoft.azure</groupId>
      <artifactId>applicationinsights-core</artifactId>
      <version>2.6.3</version>
    </dependency>

        <!-- Spring -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.sbb</groupId>
      <artifactId>springboot-graceful-shutdown</artifactId>
      <version>${springboot.graceful.shutdown.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>${javax.validation.api.version}</version>
    </dependency>
    <!-- Misc libraries -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${org.projectlombok.version}</version>
      <scope>provided</scope>
    </dependency>
        <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${org.apache.commons.lang3.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>${org.apache.commons.text.version}</version>
    </dependency>
    <dependency>
      <groupId>org.owasp</groupId>
      <artifactId>security-logging-logback</artifactId>
      <version>${owasp.security.logging.logback.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
      <version>${spotbugs.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
        <!--swagger2markup -->
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-ui</artifactId>
      <version>${springdoc-openapi.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-staticdocs</artifactId>
      <version>${springfox-staticdocs.version}</version>
      <scope>test</scope>
    </dependency>
            <!-- UNIT testing -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-surefire-provider</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-commons</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency> <!-- use a specific Groovy version rather than the one specified by spock-core -->
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>spock</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.athaydes</groupId>
      <artifactId>spock-reports</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jacoco</groupId>
      <artifactId>org.jacoco.agent</artifactId>
      <version>${maven.jacoco.plugin.version}</version>
      <scope>test</scope>
      <classifier>runtime</classifier>
    </dependency>
    <dependency>
      <groupId>com.kiwigrid</groupId>
      <artifactId>helm-maven-plugin</artifactId>
      <version>${helm.maven.plugin.version}</version>
    </dependency>
    <!-- security updates -->
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-core</artifactId>
      <version>${apache.tomcat.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-websocket</artifactId>
      <version>${apache.tomcat.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-annotations-api</artifactId>
      <version>${apache.tomcat.version}</version>
    </dependency>
  </dependencies>


  <build>
    <plugins>
      <plugin>
        <!-- The gmavenplus plugin is used to compile Groovy code. To learn more about this plugin,
        visit https://github.com/groovy/GMavenPlus/wiki -->
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <version>${maven.gmavenplus.plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>compileTests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring.boot.maven.plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>build-image</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <layers>
            <enabled>true</enabled>
          </layers>
          <image>
<!--            <bindings>-->
<!--              <binding>${project.basedir}/src/main/resources/applicationinsights-agent-3.2.2.jar:/usr/local/java/applicationinsights-agent-3.2.2.jar</binding>-->
<!--              <binding>${project.basedir}/src/main/resources/applicationinsights.json:/usr/local/java/applicationinsights.json</binding>-->
<!--            </bindings>-->
            <builder>gcr.io/paketo-buildpacks/builder:base</builder>
            <buildpacks>
              <buildpack>gcr.io/paketo-buildpacks/azul-zulu:latest</buildpack>
              <buildpack>gcr.io/paketo-buildpacks/executable-jar:latest</buildpack>
              <buildpack>gcr.io/paketo-buildpacks/spring-boot:latest</buildpack>
              <buildpack>gcr.io/paketo-buildpacks/azure-application-insights:latest</buildpack>
<!--              <buildpack>gcr.io/paketo-buildpacks/java-azure:latest</buildpack>-->
            </buildpacks>
            <bindings>
              <binding>${project.basedir}/bindings:/platform/bindings/application-insights</binding>
            </bindings>
            <env>
              <BP_JVM_VERSION>11.*</BP_JVM_VERSION>
<!--              <BP_DEBUG>true</BP_DEBUG>-->
<!--              <JAVA_TOOL_OPTIONS>-DAPPLICATIONINSIGHTS_CONNECTION_STRING=InstrumentationKey=dc238825-fbab-4158-be48-c4ce2a35e9f5</JAVA_TOOL_OPTIONS>-->
<!--              <JAVA_TOOL_OPTIONS>-javaagent:C:\workspace\test-azuremonitor\src\main\resources\applicationinsights-agent-3.2.2.jar</JAVA_TOOL_OPTIONS>-->
            </env>
<!--            <verboseLogging>true</verboseLogging>-->
          </image>
        </configuration>
      </plugin>
      <!-- Integration/Function Test plug-in -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven.failsafe.plugin.version}</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
        </configuration>
        <executions>
          <execution>
            <id>default-integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven-surefire-report-plugin.version}</version>
        <configuration>
          <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
          <outputName>${project.name}-integration-test-results</outputName>
        </configuration>
      </plugin>
      <!--end of Integration/Function Test plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
        <configuration>
          <forkCount>3</forkCount>
                    <systemPropertyVariables>
            <io.springfox.staticdocs.outputDir>${swagger.output.dir}
            </io.springfox.staticdocs.outputDir>
          </systemPropertyVariables>
                    <useModulePath>false</useModulePath>
          <useFile>false</useFile>
          <includes>
            <include>**/*Test</include>
            <include>**/*Spec</include>
          </includes>
        </configuration>
      </plugin>
            <plugin>
        <groupId>com.github.kongchen</groupId>
        <artifactId>swagger-maven-plugin</artifactId>
        <version>${swagger-maven-plugin-version}</version>
        <configuration>
          <apiSources>
            <apiSource>
              <springmvc>true</springmvc>
              <outputFormats>json</outputFormats>
              <locations>
                <location>com.nuance.service.rest</location>
              </locations>
              <schemes>
                <scheme>http</scheme>
                <scheme>https</scheme>
              </schemes>
              <host>localhost</host>
              <basePath>/</basePath>
              <descriptionFile>${swagger.info.object.file}</descriptionFile>
              <info>
                <title>test-azuremonitor</title>
                <version>1.0</version>
              </info>
              <securityDefinitions>
              </securityDefinitions>
              <swaggerDirectory>${swagger.output.dir}</swaggerDirectory>
              <attachSwaggerArtifact>true</attachSwaggerArtifact>
            </apiSource>
          </apiSources>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- First, use the swagger2markup plugin to generate asciidoc -->
<!--      Find a replacement of swagger2markup for Open API 3, no current support-->
<!--      <plugin>-->
<!--        <groupId>io.github.swagger2markup</groupId>-->
<!--        <artifactId>swagger2markup-maven-plugin</artifactId>-->
<!--        <version>${swagger2markup.version}</version>-->
<!--        <dependencies>-->
<!--          <dependency>-->
<!--            <groupId>io.github.swagger2markup</groupId>-->
<!--            <artifactId>swagger2markup-import-files-ext</artifactId>-->
<!--            <version>${swagger2markup.ext.version}</version>-->
<!--          </dependency>-->
<!--          <dependency>-->
<!--            <groupId>io.github.swagger2markup</groupId>-->
<!--            <artifactId>swagger2markup-spring-restdocs-ext</artifactId>-->
<!--            <version>${swagger2markup.ext.version}</version>-->
<!--          </dependency>-->
<!--        </dependencies>-->
<!--        <configuration>-->
<!--          <swaggerInput>${swagger.input}</swaggerInput>-->
<!--          <outputDir>${generated.asciidoc.directory}</outputDir>-->
<!--          <config>-->
<!--            <swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>-->
<!--            <swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy>-->
<!--            <swagger2markup.extensions.dynamicOverview.contentPath>-->
<!--              ${project.basedir}/src/docs/asciidoc/extensions/overview-->
<!--            </swagger2markup.extensions.dynamicOverview.contentPath>-->
<!--            <swagger2markup.extensions.dynamicDefinitions.contentPath>-->
<!--              ${project.basedir}/src/docs/asciidoc/extensions/definitions-->
<!--            </swagger2markup.extensions.dynamicDefinitions.contentPath>-->
<!--            <swagger2markup.extensions.dynamicPaths.contentPath>-->
<!--              ${project.basedir}/src/docs/asciidoc/extensions/paths-->
<!--            </swagger2markup.extensions.dynamicPaths.contentPath>-->
<!--            <swagger2markup.extensions.dynamicSecurity.contentPath>-->
<!--              ${project.basedir}src/docs/asciidoc/extensions/security/-->
<!--            </swagger2markup.extensions.dynamicSecurity.contentPath>-->
<!--            <swagger2markup.extensions.springRestDocs.snippetBaseUri>${swagger.snippetOutput.dir}-->
<!--            </swagger2markup.extensions.springRestDocs.snippetBaseUri>-->
<!--            <swagger2markup.extensions.springRestDocs.defaultSnippets>true-->
<!--            </swagger2markup.extensions.springRestDocs.defaultSnippets>-->
<!--          </config>-->
<!--        </configuration>-->
<!--        <executions>-->
<!--          <execution>-->
<!--            <phase>prepare-package</phase>-->
<!--            <goals>-->
<!--              <goal>convertSwagger2markup</goal>-->
<!--            </goals>-->
<!--          </execution>-->
<!--        </executions>-->
<!--      </plugin>-->
      <!-- Run the generated asciidoc through Asciidoctor to generate other
documentation types, such as PDFs or HTML5 -->
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>${asciidoctor-maven-plugin.version}</version>
        <!-- Configure generic document generation settings -->
        <configuration>
          <sourceDirectory>${asciidoctor.input.directory}</sourceDirectory>
          <sourceDocumentName>index.adoc</sourceDocumentName>
          <attributes>
            <doctype>book</doctype>
            <toc>left</toc>
            <toclevels>3</toclevels>
            <numbered/>
            <hardbreaks/>
            <sectlinks/>
            <sectanchors/>
            <generated>${generated.asciidoc.directory}</generated>
          </attributes>
        </configuration>
        <!-- Since each execution can only handle one backend, run separate executions
for each desired output type -->
        <executions>
          <execution>
            <id>output-html</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <backend>html5</backend>
              <outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
            <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven.checkstyle.plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${maven.puppycrawl.checkstyle.version}</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>checkstyle-check</id>
            <phase>verify</phase>
            <configuration>
              <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
              <failOnViolation>true</failOnViolation>
              <includeResources>false</includeResources>
              <includeTestResources>false</includeTestResources>
              <logViolationsToConsole>true</logViolationsToConsole>
              <maxAllowedViolations>0</maxAllowedViolations>
              <violationSeverity>error</violationSeverity>
              <propertyExpansion>project.basedir=${project.basedir}</propertyExpansion>
              <sourceDirectories>
                <sourceDirectory>${project.basedir}/src</sourceDirectory>
              </sourceDirectories>
              <excludes>**/test/resources/**/*</excludes>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>aggregate-download-licenses</id>
            <goals>
              <goal>aggregate-download-licenses</goal>
              <goal>update-project-license</goal>
              <goal>aggregate-add-third-party</goal>
            </goals>
          </execution>
          <execution>
            <id>check-file-header</id>
            <goals>
              <goal>check-file-header</goal>
            </goals>
            <phase>process-sources</phase>
            <configuration>
              <excludes>
                <exclude>**/*.xml</exclude>
                <exclude>**/*.sh</exclude>
                <exclude>**/*.json</exclude>
                <exclude>**/*.groovy</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${pmd.plugin.version}</version>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${owasp.dependency.check.plugin.version}</version>
        <configuration>
          <format>ALL</format>
          <failBuildOnCVSS>7</failBuildOnCVSS>
          <failOnError>true</failOnError>
          <skipTestScope>true</skipTestScope>
          <suppressionFiles>
            <!-- project-specific suppression file -->
            <suppressionFile>src/config/owasp-suppressions.xml</suppressionFile>
          </suppressionFiles>
          <hintsFile>src/config/owasp-hints.xml</hintsFile>
          <cveUrlModified>${owasp.depcheck.cveUrlBase}/nvdcve-1.1-modified.json.gz</cveUrlModified>
          <cveUrlBase>${owasp.depcheck.cveUrlBase}/nvdcve-1.1-%d.json.gz</cveUrlBase>
          <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
          <nuspecAnalyzerEnabled>false</nuspecAnalyzerEnabled>
          <nugetconfAnalyzerEnabled>false</nugetconfAnalyzerEnabled>
        </configuration>

        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs.maven.plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${maven.jacoco.plugin.version}</version>
        <configuration>
          <destFile>${sonar.jacoco.reportPaths}</destFile>
          <dataFile>${sonar.jacoco.reportPaths}</dataFile>
        </configuration>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-prepare-agent-integration</id>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report-integration</id>
            <goals>
              <goal>report-integration</goal>
            </goals>
          </execution>
          <execution>
            <id>default-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>*Test.class</exclude>
                <exclude>**/*Application.class</exclude>
                <exclude>**/*ApplicationProperties.class</exclude>
                <exclude>**/model/**</exclude>
              </excludes>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>${code-coverage}</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>de.thetaphi</groupId>
        <artifactId>forbiddenapis</artifactId>
        <version>${forbiddenapis.plugin.version}</version>
        <configuration>
          <targetVersion>${java.version}</targetVersion>
          <failOnUnsupportedJava>false</failOnUnsupportedJava>
          <bundledSignatures>
            <bundledSignature>jdk-unsafe</bundledSignature>
            <bundledSignature>jdk-deprecated</bundledSignature>
            <bundledSignature>jdk-system-out</bundledSignature>
            <bundledSignature>jdk-non-portable</bundledSignature>
          </bundledSignatures>
          <excludes>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
              <goal>testCheck</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>edu.illinois</groupId>
        <artifactId>nondex-maven-plugin</artifactId>
        <version>${nondex.maven.plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>${site.plugin.version}</version>
      </plugin>
    </plugins>
    <resources>
      <!-- this is needed because "resources" element overrides the default one -->
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>**/applicationinsights-agent-3.2.2.jar</exclude>
        </excludes>
      </resource>
    </resources>
  </build>

  <repositories>
    <repository>
      <id>entrd-artifactory-releases</id>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <name>entrd-artifactory</name>
      <url>https://entrd-jfrog.ent.nuance.com/artifactory/libs-release/</url>
    </repository>
  </repositories>


  <pluginRepositories>
    <pluginRepository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>plugins-release</name>
      <url>https://entrd-jfrog.ent.nuance.com/artifactory/plugins-release/</url>
    </pluginRepository>
  </pluginRepositories>


</project>
